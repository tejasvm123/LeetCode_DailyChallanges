/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int>inorderNodes;

    void inorderT(TreeNode* root){
        if(root == NULL){
            return;
        }
        inorderT(root -> left);
        inorderNodes.push_back(root -> val);
        inorderT(root -> right);
    }

    int minDiffInBST(TreeNode* root) {
        inorderT(root);

        int minDist = INT_MAX;
        for(int i=1; i<inorderNodes.size(); i++){
            minDist = min(minDist, inorderNodes[i] - inorderNodes[i-1]);
        }
        return minDist;
    }
};
