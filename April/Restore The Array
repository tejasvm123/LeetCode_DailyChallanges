class Solution {
public:
    const int MOD = 1e9 + 7;

bool is_valid_number(const string& s, int start, int end, int k) {
    if (s[start] == '0') {
        return false;
    }
    int num = 0;
    for (int i = start; i < end; i++) {
        num = num * 10 + (s[i] - '0');
        if (num > k) {
            return false;
        }
    }
    return true;
}

int numberOfArrays(string s, int k) {
    int n = s.size();
    vector<int> dp(n+1);
    dp[0] = 1;

    for (int i = 1; i <= n; i++) {
        for (int j = i-1; j >= 0 && i-j <= 9; j--) {
            if (is_valid_number(s, j, i, k)) {
                dp[i] = (dp[i] + dp[j]) % MOD;
            }
        }
    }
    return dp[n];
    }
};
