class Solution {
public:
    long long minCost(vector<int>& nums, vector<int>& cost) {
        vector<pair<int, int>> v;
        for (int i = 0; i < nums.size(); i++) {
            v.push_back({nums[i], cost[i]});
        }
        sort(v.begin(), v.end());
        
        long long int ans = 0;
        for (int i = 0; i < nums.size(); i++) {
            ans =ans+ 1ll * v[i].second;
        }
        
        long long int median , tot = 0;
        int i = 0;
        while (tot < (ans + 1) / 2 && i < cost.size()) {
            tot = tot + (1ll * v[i].second);
            median = v[i].first;
            i++;
        }
        
        long long int total = 0;
        for (int j = 0; j < nums.size(); j++) {
            total += abs(1ll * nums[j] - median) * (1ll * cost[j]);
        }
        
        return total;
    }
};
