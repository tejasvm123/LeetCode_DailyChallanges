/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int listCnt(ListNode* head){
        ListNode* curr = head;
        int cnt = 0;

        while(curr){
            cnt++;
            curr = curr -> next;
        }
        return cnt;
    }
    TreeNode* linearSol(ListNode* &head, int n){
        if(n == 0){
            return NULL;
        }
        TreeNode* left = linearSol(head, n/2);

        TreeNode* root = new TreeNode(head -> val);
        head = head -> next;
        root -> left = left;

        root -> right = linearSol(head, n-n/2-1);
        return root;
    }
    TreeNode* sortedListToBST(ListNode* head) {
        int x = listCnt(head);
        return linearSol(head, x);
    }
};
