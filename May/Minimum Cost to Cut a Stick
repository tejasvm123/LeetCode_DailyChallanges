class Solution {
public:
    int minCost(int n, vector<int>& cuts) {
        cuts.push_back(0);
        cuts.push_back(n);

        int m=cuts.size();
        sort(cuts.begin(), cuts.end());

        vector dp(m, vector<int>(m, -1));

        function<int(int, int)>  cost=[&](int i, int j)->int{
            if (j-i<=1) {
                return 0;
            }
            if (dp[i][j]!=-1){ 
                return dp[i][j];
            }
            int result=INT_MAX;

            for(int k=i+1; k<j; k++){
                result=min(result, cost(i, k) +cost(k, j));
            }
            return dp[i][j] = result+(cuts[j]-cuts[i]);
        };
        return cost(0, m-1);
    }
};
